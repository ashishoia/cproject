#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void enqueue(struct Node** front, struct Node** rear, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;

    if (*rear == NULL) {
        *front = *rear = newNode;
    } else {
        (*rear)->next = newNode;
        *rear = newNode;
    }
}

int dequeue(struct Node** front, struct Node** rear) {
    if (*front == NULL) {
        printf("Queue is empty.\n");
        return -1;
    } else {
        int data = (*front)->data;
        struct Node* temp = *front;

        if (*front == *rear) {
            *front = *rear = NULL;
        } else {
            *front = (*front)->next;
        }

        free(temp);
        return data;
    }
}

void display(struct Node* front) {
    struct Node* current = front;
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
   }
}

int main() {
    struct Node* front = NULL;
    struct Node* rear = NULL;

    enqueue(&front, &rear, 10);
    enqueue(&front, &rear, 20);
    enqueue(&front, &rear, 30);

    printf("Dequeued: %d\n", dequeue(&front, &rear));

    display(front);

    return 0;
}
